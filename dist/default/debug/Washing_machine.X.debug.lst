

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jun 29 13:41:23 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,space=0,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 12/10/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0004                     fsr             equ	4
    65     0004                     fsr0            equ	4
    66     0000                     indf            equ	0
    67     0000                     indf0           equ	0
    68     0002                     pc              equ	2
    69     0002                     pcl             equ	2
    70     000A                     pclath          equ	10
    71     0003                     status          equ	3
    72     0000                     INDF            equ	0	;# 
    73     0001                     TMR0            equ	1	;# 
    74     0002                     PCL             equ	2	;# 
    75     0003                     STATUS          equ	3	;# 
    76     0004                     FSR             equ	4	;# 
    77     0005                     PORTA           equ	5	;# 
    78     0006                     PORTB           equ	6	;# 
    79     0007                     PORTC           equ	7	;# 
    80     0008                     PORTD           equ	8	;# 
    81     0009                     PORTE           equ	9	;# 
    82     000A                     PCLATH          equ	10	;# 
    83     000B                     INTCON          equ	11	;# 
    84     000C                     PIR1            equ	12	;# 
    85     000D                     PIR2            equ	13	;# 
    86     000E                     TMR1            equ	14	;# 
    87     000E                     TMR1L           equ	14	;# 
    88     000F                     TMR1H           equ	15	;# 
    89     0010                     T1CON           equ	16	;# 
    90     0011                     TMR2            equ	17	;# 
    91     0012                     T2CON           equ	18	;# 
    92     0013                     SSPBUF          equ	19	;# 
    93     0014                     SSPCON          equ	20	;# 
    94     0015                     CCPR1           equ	21	;# 
    95     0015                     CCPR1L          equ	21	;# 
    96     0016                     CCPR1H          equ	22	;# 
    97     0017                     CCP1CON         equ	23	;# 
    98     0018                     RCSTA           equ	24	;# 
    99     0019                     TXREG           equ	25	;# 
   100     001A                     RCREG           equ	26	;# 
   101     001B                     CCPR2           equ	27	;# 
   102     001B                     CCPR2L          equ	27	;# 
   103     001C                     CCPR2H          equ	28	;# 
   104     001D                     CCP2CON         equ	29	;# 
   105     001E                     ADRESH          equ	30	;# 
   106     001F                     ADCON0          equ	31	;# 
   107     0081                     OPTION_REG      equ	129	;# 
   108     0085                     TRISA           equ	133	;# 
   109     0086                     TRISB           equ	134	;# 
   110     0087                     TRISC           equ	135	;# 
   111     0088                     TRISD           equ	136	;# 
   112     0089                     TRISE           equ	137	;# 
   113     008C                     PIE1            equ	140	;# 
   114     008D                     PIE2            equ	141	;# 
   115     008E                     PCON            equ	142	;# 
   116     0091                     SSPCON2         equ	145	;# 
   117     0092                     PR2             equ	146	;# 
   118     0093                     SSPADD          equ	147	;# 
   119     0094                     SSPSTAT         equ	148	;# 
   120     0098                     TXSTA           equ	152	;# 
   121     0099                     SPBRG           equ	153	;# 
   122     009C                     CMCON           equ	156	;# 
   123     009D                     CVRCON          equ	157	;# 
   124     009E                     ADRESL          equ	158	;# 
   125     009F                     ADCON1          equ	159	;# 
   126     010C                     EEDATA          equ	268	;# 
   127     010D                     EEADR           equ	269	;# 
   128     010E                     EEDATH          equ	270	;# 
   129     010F                     EEADRH          equ	271	;# 
   130     018C                     EECON1          equ	396	;# 
   131     018D                     EECON2          equ	397	;# 
   132     0000                     INDF            equ	0	;# 
   133     0001                     TMR0            equ	1	;# 
   134     0002                     PCL             equ	2	;# 
   135     0003                     STATUS          equ	3	;# 
   136     0004                     FSR             equ	4	;# 
   137     0005                     PORTA           equ	5	;# 
   138     0006                     PORTB           equ	6	;# 
   139     0007                     PORTC           equ	7	;# 
   140     0008                     PORTD           equ	8	;# 
   141     0009                     PORTE           equ	9	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     0088                     TRISD           equ	136	;# 
   172     0089                     TRISE           equ	137	;# 
   173     008C                     PIE1            equ	140	;# 
   174     008D                     PIE2            equ	141	;# 
   175     008E                     PCON            equ	142	;# 
   176     0091                     SSPCON2         equ	145	;# 
   177     0092                     PR2             equ	146	;# 
   178     0093                     SSPADD          equ	147	;# 
   179     0094                     SSPSTAT         equ	148	;# 
   180     0098                     TXSTA           equ	152	;# 
   181     0099                     SPBRG           equ	153	;# 
   182     009C                     CMCON           equ	156	;# 
   183     009D                     CVRCON          equ	157	;# 
   184     009E                     ADRESL          equ	158	;# 
   185     009F                     ADCON1          equ	159	;# 
   186     010C                     EEDATA          equ	268	;# 
   187     010D                     EEADR           equ	269	;# 
   188     010E                     EEDATH          equ	270	;# 
   189     010F                     EEADRH          equ	271	;# 
   190     018C                     EECON1          equ	396	;# 
   191     018D                     EECON2          equ	397	;# 
   192     0000                     INDF            equ	0	;# 
   193     0001                     TMR0            equ	1	;# 
   194     0002                     PCL             equ	2	;# 
   195     0003                     STATUS          equ	3	;# 
   196     0004                     FSR             equ	4	;# 
   197     0005                     PORTA           equ	5	;# 
   198     0006                     PORTB           equ	6	;# 
   199     0007                     PORTC           equ	7	;# 
   200     0008                     PORTD           equ	8	;# 
   201     0009                     PORTE           equ	9	;# 
   202     000A                     PCLATH          equ	10	;# 
   203     000B                     INTCON          equ	11	;# 
   204     000C                     PIR1            equ	12	;# 
   205     000D                     PIR2            equ	13	;# 
   206     000E                     TMR1            equ	14	;# 
   207     000E                     TMR1L           equ	14	;# 
   208     000F                     TMR1H           equ	15	;# 
   209     0010                     T1CON           equ	16	;# 
   210     0011                     TMR2            equ	17	;# 
   211     0012                     T2CON           equ	18	;# 
   212     0013                     SSPBUF          equ	19	;# 
   213     0014                     SSPCON          equ	20	;# 
   214     0015                     CCPR1           equ	21	;# 
   215     0015                     CCPR1L          equ	21	;# 
   216     0016                     CCPR1H          equ	22	;# 
   217     0017                     CCP1CON         equ	23	;# 
   218     0018                     RCSTA           equ	24	;# 
   219     0019                     TXREG           equ	25	;# 
   220     001A                     RCREG           equ	26	;# 
   221     001B                     CCPR2           equ	27	;# 
   222     001B                     CCPR2L          equ	27	;# 
   223     001C                     CCPR2H          equ	28	;# 
   224     001D                     CCP2CON         equ	29	;# 
   225     001E                     ADRESH          equ	30	;# 
   226     001F                     ADCON0          equ	31	;# 
   227     0081                     OPTION_REG      equ	129	;# 
   228     0085                     TRISA           equ	133	;# 
   229     0086                     TRISB           equ	134	;# 
   230     0087                     TRISC           equ	135	;# 
   231     0088                     TRISD           equ	136	;# 
   232     0089                     TRISE           equ	137	;# 
   233     008C                     PIE1            equ	140	;# 
   234     008D                     PIE2            equ	141	;# 
   235     008E                     PCON            equ	142	;# 
   236     0091                     SSPCON2         equ	145	;# 
   237     0092                     PR2             equ	146	;# 
   238     0093                     SSPADD          equ	147	;# 
   239     0094                     SSPSTAT         equ	148	;# 
   240     0098                     TXSTA           equ	152	;# 
   241     0099                     SPBRG           equ	153	;# 
   242     009C                     CMCON           equ	156	;# 
   243     009D                     CVRCON          equ	157	;# 
   244     009E                     ADRESL          equ	158	;# 
   245     009F                     ADCON1          equ	159	;# 
   246     010C                     EEDATA          equ	268	;# 
   247     010D                     EEADR           equ	269	;# 
   248     010E                     EEDATH          equ	270	;# 
   249     010F                     EEADRH          equ	271	;# 
   250     018C                     EECON1          equ	396	;# 
   251     018D                     EECON2          equ	397	;# 
   252     0000                     INDF            equ	0	;# 
   253     0001                     TMR0            equ	1	;# 
   254     0002                     PCL             equ	2	;# 
   255     0003                     STATUS          equ	3	;# 
   256     0004                     FSR             equ	4	;# 
   257     0005                     PORTA           equ	5	;# 
   258     0006                     PORTB           equ	6	;# 
   259     0007                     PORTC           equ	7	;# 
   260     0008                     PORTD           equ	8	;# 
   261     0009                     PORTE           equ	9	;# 
   262     000A                     PCLATH          equ	10	;# 
   263     000B                     INTCON          equ	11	;# 
   264     000C                     PIR1            equ	12	;# 
   265     000D                     PIR2            equ	13	;# 
   266     000E                     TMR1            equ	14	;# 
   267     000E                     TMR1L           equ	14	;# 
   268     000F                     TMR1H           equ	15	;# 
   269     0010                     T1CON           equ	16	;# 
   270     0011                     TMR2            equ	17	;# 
   271     0012                     T2CON           equ	18	;# 
   272     0013                     SSPBUF          equ	19	;# 
   273     0014                     SSPCON          equ	20	;# 
   274     0015                     CCPR1           equ	21	;# 
   275     0015                     CCPR1L          equ	21	;# 
   276     0016                     CCPR1H          equ	22	;# 
   277     0017                     CCP1CON         equ	23	;# 
   278     0018                     RCSTA           equ	24	;# 
   279     0019                     TXREG           equ	25	;# 
   280     001A                     RCREG           equ	26	;# 
   281     001B                     CCPR2           equ	27	;# 
   282     001B                     CCPR2L          equ	27	;# 
   283     001C                     CCPR2H          equ	28	;# 
   284     001D                     CCP2CON         equ	29	;# 
   285     001E                     ADRESH          equ	30	;# 
   286     001F                     ADCON0          equ	31	;# 
   287     0081                     OPTION_REG      equ	129	;# 
   288     0085                     TRISA           equ	133	;# 
   289     0086                     TRISB           equ	134	;# 
   290     0087                     TRISC           equ	135	;# 
   291     0088                     TRISD           equ	136	;# 
   292     0089                     TRISE           equ	137	;# 
   293     008C                     PIE1            equ	140	;# 
   294     008D                     PIE2            equ	141	;# 
   295     008E                     PCON            equ	142	;# 
   296     0091                     SSPCON2         equ	145	;# 
   297     0092                     PR2             equ	146	;# 
   298     0093                     SSPADD          equ	147	;# 
   299     0094                     SSPSTAT         equ	148	;# 
   300     0098                     TXSTA           equ	152	;# 
   301     0099                     SPBRG           equ	153	;# 
   302     009C                     CMCON           equ	156	;# 
   303     009D                     CVRCON          equ	157	;# 
   304     009E                     ADRESL          equ	158	;# 
   305     009F                     ADCON1          equ	159	;# 
   306     010C                     EEDATA          equ	268	;# 
   307     010D                     EEADR           equ	269	;# 
   308     010E                     EEDATH          equ	270	;# 
   309     010F                     EEADRH          equ	271	;# 
   310     018C                     EECON1          equ	396	;# 
   311     018D                     EECON2          equ	397	;# 
   312     0000                     INDF            equ	0	;# 
   313     0001                     TMR0            equ	1	;# 
   314     0002                     PCL             equ	2	;# 
   315     0003                     STATUS          equ	3	;# 
   316     0004                     FSR             equ	4	;# 
   317     0005                     PORTA           equ	5	;# 
   318     0006                     PORTB           equ	6	;# 
   319     0007                     PORTC           equ	7	;# 
   320     0008                     PORTD           equ	8	;# 
   321     0009                     PORTE           equ	9	;# 
   322     000A                     PCLATH          equ	10	;# 
   323     000B                     INTCON          equ	11	;# 
   324     000C                     PIR1            equ	12	;# 
   325     000D                     PIR2            equ	13	;# 
   326     000E                     TMR1            equ	14	;# 
   327     000E                     TMR1L           equ	14	;# 
   328     000F                     TMR1H           equ	15	;# 
   329     0010                     T1CON           equ	16	;# 
   330     0011                     TMR2            equ	17	;# 
   331     0012                     T2CON           equ	18	;# 
   332     0013                     SSPBUF          equ	19	;# 
   333     0014                     SSPCON          equ	20	;# 
   334     0015                     CCPR1           equ	21	;# 
   335     0015                     CCPR1L          equ	21	;# 
   336     0016                     CCPR1H          equ	22	;# 
   337     0017                     CCP1CON         equ	23	;# 
   338     0018                     RCSTA           equ	24	;# 
   339     0019                     TXREG           equ	25	;# 
   340     001A                     RCREG           equ	26	;# 
   341     001B                     CCPR2           equ	27	;# 
   342     001B                     CCPR2L          equ	27	;# 
   343     001C                     CCPR2H          equ	28	;# 
   344     001D                     CCP2CON         equ	29	;# 
   345     001E                     ADRESH          equ	30	;# 
   346     001F                     ADCON0          equ	31	;# 
   347     0081                     OPTION_REG      equ	129	;# 
   348     0085                     TRISA           equ	133	;# 
   349     0086                     TRISB           equ	134	;# 
   350     0087                     TRISC           equ	135	;# 
   351     0088                     TRISD           equ	136	;# 
   352     0089                     TRISE           equ	137	;# 
   353     008C                     PIE1            equ	140	;# 
   354     008D                     PIE2            equ	141	;# 
   355     008E                     PCON            equ	142	;# 
   356     0091                     SSPCON2         equ	145	;# 
   357     0092                     PR2             equ	146	;# 
   358     0093                     SSPADD          equ	147	;# 
   359     0094                     SSPSTAT         equ	148	;# 
   360     0098                     TXSTA           equ	152	;# 
   361     0099                     SPBRG           equ	153	;# 
   362     009C                     CMCON           equ	156	;# 
   363     009D                     CVRCON          equ	157	;# 
   364     009E                     ADRESL          equ	158	;# 
   365     009F                     ADCON1          equ	159	;# 
   366     010C                     EEDATA          equ	268	;# 
   367     010D                     EEADR           equ	269	;# 
   368     010E                     EEDATH          equ	270	;# 
   369     010F                     EEADRH          equ	271	;# 
   370     018C                     EECON1          equ	396	;# 
   371     018D                     EECON2          equ	397	;# 
   372     0000                     INDF            equ	0	;# 
   373     0001                     TMR0            equ	1	;# 
   374     0002                     PCL             equ	2	;# 
   375     0003                     STATUS          equ	3	;# 
   376     0004                     FSR             equ	4	;# 
   377     0005                     PORTA           equ	5	;# 
   378     0006                     PORTB           equ	6	;# 
   379     0007                     PORTC           equ	7	;# 
   380     0008                     PORTD           equ	8	;# 
   381     0009                     PORTE           equ	9	;# 
   382     000A                     PCLATH          equ	10	;# 
   383     000B                     INTCON          equ	11	;# 
   384     000C                     PIR1            equ	12	;# 
   385     000D                     PIR2            equ	13	;# 
   386     000E                     TMR1            equ	14	;# 
   387     000E                     TMR1L           equ	14	;# 
   388     000F                     TMR1H           equ	15	;# 
   389     0010                     T1CON           equ	16	;# 
   390     0011                     TMR2            equ	17	;# 
   391     0012                     T2CON           equ	18	;# 
   392     0013                     SSPBUF          equ	19	;# 
   393     0014                     SSPCON          equ	20	;# 
   394     0015                     CCPR1           equ	21	;# 
   395     0015                     CCPR1L          equ	21	;# 
   396     0016                     CCPR1H          equ	22	;# 
   397     0017                     CCP1CON         equ	23	;# 
   398     0018                     RCSTA           equ	24	;# 
   399     0019                     TXREG           equ	25	;# 
   400     001A                     RCREG           equ	26	;# 
   401     001B                     CCPR2           equ	27	;# 
   402     001B                     CCPR2L          equ	27	;# 
   403     001C                     CCPR2H          equ	28	;# 
   404     001D                     CCP2CON         equ	29	;# 
   405     001E                     ADRESH          equ	30	;# 
   406     001F                     ADCON0          equ	31	;# 
   407     0081                     OPTION_REG      equ	129	;# 
   408     0085                     TRISA           equ	133	;# 
   409     0086                     TRISB           equ	134	;# 
   410     0087                     TRISC           equ	135	;# 
   411     0088                     TRISD           equ	136	;# 
   412     0089                     TRISE           equ	137	;# 
   413     008C                     PIE1            equ	140	;# 
   414     008D                     PIE2            equ	141	;# 
   415     008E                     PCON            equ	142	;# 
   416     0091                     SSPCON2         equ	145	;# 
   417     0092                     PR2             equ	146	;# 
   418     0093                     SSPADD          equ	147	;# 
   419     0094                     SSPSTAT         equ	148	;# 
   420     0098                     TXSTA           equ	152	;# 
   421     0099                     SPBRG           equ	153	;# 
   422     009C                     CMCON           equ	156	;# 
   423     009D                     CVRCON          equ	157	;# 
   424     009E                     ADRESL          equ	158	;# 
   425     009F                     ADCON1          equ	159	;# 
   426     010C                     EEDATA          equ	268	;# 
   427     010D                     EEADR           equ	269	;# 
   428     010E                     EEDATH          equ	270	;# 
   429     010F                     EEADRH          equ	271	;# 
   430     018C                     EECON1          equ	396	;# 
   431     018D                     EECON2          equ	397	;# 
   432     0000                     INDF            equ	0	;# 
   433     0001                     TMR0            equ	1	;# 
   434     0002                     PCL             equ	2	;# 
   435     0003                     STATUS          equ	3	;# 
   436     0004                     FSR             equ	4	;# 
   437     0005                     PORTA           equ	5	;# 
   438     0006                     PORTB           equ	6	;# 
   439     0007                     PORTC           equ	7	;# 
   440     0008                     PORTD           equ	8	;# 
   441     0009                     PORTE           equ	9	;# 
   442     000A                     PCLATH          equ	10	;# 
   443     000B                     INTCON          equ	11	;# 
   444     000C                     PIR1            equ	12	;# 
   445     000D                     PIR2            equ	13	;# 
   446     000E                     TMR1            equ	14	;# 
   447     000E                     TMR1L           equ	14	;# 
   448     000F                     TMR1H           equ	15	;# 
   449     0010                     T1CON           equ	16	;# 
   450     0011                     TMR2            equ	17	;# 
   451     0012                     T2CON           equ	18	;# 
   452     0013                     SSPBUF          equ	19	;# 
   453     0014                     SSPCON          equ	20	;# 
   454     0015                     CCPR1           equ	21	;# 
   455     0015                     CCPR1L          equ	21	;# 
   456     0016                     CCPR1H          equ	22	;# 
   457     0017                     CCP1CON         equ	23	;# 
   458     0018                     RCSTA           equ	24	;# 
   459     0019                     TXREG           equ	25	;# 
   460     001A                     RCREG           equ	26	;# 
   461     001B                     CCPR2           equ	27	;# 
   462     001B                     CCPR2L          equ	27	;# 
   463     001C                     CCPR2H          equ	28	;# 
   464     001D                     CCP2CON         equ	29	;# 
   465     001E                     ADRESH          equ	30	;# 
   466     001F                     ADCON0          equ	31	;# 
   467     0081                     OPTION_REG      equ	129	;# 
   468     0085                     TRISA           equ	133	;# 
   469     0086                     TRISB           equ	134	;# 
   470     0087                     TRISC           equ	135	;# 
   471     0088                     TRISD           equ	136	;# 
   472     0089                     TRISE           equ	137	;# 
   473     008C                     PIE1            equ	140	;# 
   474     008D                     PIE2            equ	141	;# 
   475     008E                     PCON            equ	142	;# 
   476     0091                     SSPCON2         equ	145	;# 
   477     0092                     PR2             equ	146	;# 
   478     0093                     SSPADD          equ	147	;# 
   479     0094                     SSPSTAT         equ	148	;# 
   480     0098                     TXSTA           equ	152	;# 
   481     0099                     SPBRG           equ	153	;# 
   482     009C                     CMCON           equ	156	;# 
   483     009D                     CVRCON          equ	157	;# 
   484     009E                     ADRESL          equ	158	;# 
   485     009F                     ADCON1          equ	159	;# 
   486     010C                     EEDATA          equ	268	;# 
   487     010D                     EEADR           equ	269	;# 
   488     010E                     EEDATH          equ	270	;# 
   489     010F                     EEADRH          equ	271	;# 
   490     018C                     EECON1          equ	396	;# 
   491     018D                     EECON2          equ	397	;# 
   492                           
   493                           	psect	idataCOMMON
   494     0298                     __pidataCOMMON:
   495                           
   496                           ;initializer for read_digital_keypad@once
   497     0298  3401               	retlw	1
   498                           
   499                           	psect	idataBANK0
   500     0299                     __pidataBANK0:
   501                           
   502                           ;initializer for _operational_mode
   503     0299  3401               	retlw	1
   504     0006                     _PORTB          set	6
   505     0008                     _PORTD          set	8
   506     0061                     _TMR2IF         set	97
   507     0090                     _T2CKPS0        set	144
   508     0091                     _T2CKPS1        set	145
   509     0092                     _TMR2ON         set	146
   510     0093                     _TOUTPS0        set	147
   511     0094                     _TOUTPS1        set	148
   512     0095                     _TOUTPS2        set	149
   513     0096                     _TOUTPS3        set	150
   514     0049                     _RE1            set	73
   515     004A                     _RE2            set	74
   516     005E                     _PEIE           set	94
   517     005F                     _GIE            set	95
   518     0092                     _PR2            set	146
   519     0086                     _TRISB          set	134
   520     0088                     _TRISD          set	136
   521     0461                     _TMR2IE         set	1121
   522     0449                     _TRISE1         set	1097
   523     044A                     _TRISE2         set	1098
   524                           
   525                           	psect	strings
   526     0157                     __pstrings:
   527     0157                     stringtab:
   528     0157                     __stringtab:
   529     0157                     stringcode:	
   530                           ;	String table - string pointers are 1 byte each
   531                           
   532     0157                     stringdir:
   533     0157  3001               	movlw	high stringdir
   534     0158  008A               	movwf	10
   535     0159  0804               	movf	4,w
   536     015A  0A84               	incf	4,f
   537     015B  0782               	addwf	2,f
   538     015C                     __stringbase:
   539     015C  3400               	retlw	0
   540     015D                     __end_of__stringtab:
   541     015D                     STR_6:
   542     015D  3457               	retlw	87	;'W'
   543     015E  3441               	retlw	65	;'A'
   544     015F  3453               	retlw	83	;'S'
   545     0160  3448               	retlw	72	;'H'
   546     0161  3449               	retlw	73	;'I'
   547     0162  344E               	retlw	78	;'N'
   548     0163  3447               	retlw	71	;'G'
   549     0164  3420               	retlw	32	;' '
   550     0165  3450               	retlw	80	;'P'
   551     0166  3452               	retlw	82	;'R'
   552     0167  344F               	retlw	79	;'O'
   553     0168  3447               	retlw	71	;'G'
   554     0169  3452               	retlw	82	;'R'
   555     016A  3441               	retlw	65	;'A'
   556     016B  344D               	retlw	77	;'M'
   557     016C  3400               	retlw	0
   558     016D                     STR_3:
   559     016D  3457               	retlw	87	;'W'
   560     016E  3461               	retlw	97	;'a'
   561     016F  3473               	retlw	115	;'s'
   562     0170  3468               	retlw	104	;'h'
   563     0171  3469               	retlw	105	;'i'
   564     0172  346E               	retlw	110	;'n'
   565     0173  3467               	retlw	103	;'g'
   566     0174  3420               	retlw	32	;' '
   567     0175  344D               	retlw	77	;'M'
   568     0176  3461               	retlw	97	;'a'
   569     0177  3463               	retlw	99	;'c'
   570     0178  3468               	retlw	104	;'h'
   571     0179  3469               	retlw	105	;'i'
   572     017A  346E               	retlw	110	;'n'
   573     017B  3465               	retlw	101	;'e'
   574     017C  3400               	retlw	0
   575     017D                     STR_1:
   576     017D  3450               	retlw	80	;'P'
   577     017E  3472               	retlw	114	;'r'
   578     017F  3465               	retlw	101	;'e'
   579     0180  3473               	retlw	115	;'s'
   580     0181  3473               	retlw	115	;'s'
   581     0182  3420               	retlw	32	;' '
   582     0183  344B               	retlw	75	;'K'
   583     0184  3465               	retlw	101	;'e'
   584     0185  3479               	retlw	121	;'y'
   585     0186  3435               	retlw	53	;'5'
   586     0187  3420               	retlw	32	;' '
   587     0188  3474               	retlw	116	;'t'
   588     0189  346F               	retlw	111	;'o'
   589     018A  3400               	retlw	0
   590     018B                     STR_4:
   591     018B  3450               	retlw	80	;'P'
   592     018C  346F               	retlw	111	;'o'
   593     018D  3477               	retlw	119	;'w'
   594     018E  3465               	retlw	101	;'e'
   595     018F  3472               	retlw	114	;'r'
   596     0190  3469               	retlw	105	;'i'
   597     0191  346E               	retlw	110	;'n'
   598     0192  3467               	retlw	103	;'g'
   599     0193  3420               	retlw	32	;' '
   600     0194  344F               	retlw	79	;'O'
   601     0195  344E               	retlw	78	;'N'
   602     0196  3400               	retlw	0
   603     0197                     STR_2:
   604     0197  3450               	retlw	80	;'P'
   605     0198  346F               	retlw	111	;'o'
   606     0199  3477               	retlw	119	;'w'
   607     019A  3465               	retlw	101	;'e'
   608     019B  3472               	retlw	114	;'r'
   609     019C  3420               	retlw	32	;' '
   610     019D  344F               	retlw	79	;'O'
   611     019E  344E               	retlw	78	;'N'
   612     019F  3400               	retlw	0
   613     016D                     STR_5           equ	STR_3
   614                           
   615                           	psect	cinit
   616     0010                     start_initialization:	
   617                           ; #config settings
   618                           
   619     0010                     __initialization:
   620                           
   621                           ; Initialize objects allocated to BANK0
   622     0010  120A  118A  2299  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   623     0015  00AB               	movwf	__pdataBANK0& (0+127)
   624                           
   625                           ; Initialize objects allocated to COMMON
   626     0016  120A  118A  2298  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   627     001B  00FB               	movwf	__pdataCOMMON& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK0
   630     001C  01A7               	clrf	__pbssBANK0& (0+127)
   631     001D  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   632     001E  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   633     001F  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   634     0020                     end_of_initialization:	
   635                           ;End of C runtime variable initialization code
   636                           
   637     0020                     __end_of__initialization:
   638     0020  0183               	clrf	3
   639     0021  120A  118A  289A   	ljmp	_main	;jump to C main() function
   640                           
   641                           	psect	dataCOMMON
   642     007B                     __pdataCOMMON:
   643     007B                     read_digital_keypad@once:
   644     007B                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647     0027                     __pbssBANK0:
   648     0027                     isr@count:
   649     0027                     	ds	4
   650                           
   651                           	psect	dataBANK0
   652     002B                     __pdataBANK0:
   653     002B                     _operational_mode:
   654     002B                     	ds	1
   655                           
   656                           	psect	cstackCOMMON
   657     0070                     __pcstackCOMMON:
   658     0070                     ?_init_clcd:
   659     0070                     ?_init_digital_keypad:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_init_timer2:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_read_digital_keypad:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_clear_screen:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_power_on_screen:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_washing_program_display:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_init_config:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_init_display_controller:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_isr:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     washing_program_display@key:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ??_clear_screen:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ??_isr:	
   696                           ; 1 bytes @ 0x0
   697                           
   698                           
   699                           ; 1 bytes @ 0x0
   700     0070                     	ds	2
   701     0072                     ?_clcd_write:
   702     0072                     clcd_write@mode:	
   703                           ; 1 bytes @ 0x2
   704                           
   705     0072                     ??_init_digital_keypad:	
   706                           ; 1 bytes @ 0x2
   707                           
   708     0072                     ??_init_timer2:	
   709                           ; 1 bytes @ 0x2
   710                           
   711     0072                     ??_read_digital_keypad:	
   712                           ; 1 bytes @ 0x2
   713                           
   714                           
   715                           ; 1 bytes @ 0x2
   716     0072                     	ds	1
   717     0073                     read_digital_keypad@mode:
   718     0073                     ??_clcd_write:	
   719                           ; 1 bytes @ 0x3
   720                           
   721                           
   722                           ; 1 bytes @ 0x3
   723     0073                     	ds	2
   724     0075                     clcd_write@byte:
   725                           
   726                           ; 1 bytes @ 0x5
   727     0075                     	ds	1
   728     0076                     ?_clcd_print:
   729     0076                     ?_clcd_putch:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     clcd_putch@addr:	
   733                           ; 1 bytes @ 0x6
   734                           
   735     0076                     clcd_print@str:	
   736                           ; 1 bytes @ 0x6
   737                           
   738     0076                     ??_init_display_controller:	
   739                           ; 1 bytes @ 0x6
   740                           
   741                           
   742                           ; 1 bytes @ 0x6
   743     0076                     	ds	1
   744     0077                     clcd_putch@data:
   745     0077                     clcd_print@addr:	
   746                           ; 1 bytes @ 0x7
   747                           
   748     0077                     ??_clcd_putch:	
   749                           ; 1 bytes @ 0x7
   750                           
   751                           
   752                           ; 1 bytes @ 0x7
   753     0077                     	ds	1
   754     0078                     ??_init_clcd:
   755     0078                     ??_clcd_print:	
   756                           ; 1 bytes @ 0x8
   757                           
   758     0078                     ??_power_on_screen:	
   759                           ; 1 bytes @ 0x8
   760                           
   761     0078                     ??_washing_program_display:	
   762                           ; 1 bytes @ 0x8
   763                           
   764     0078                     ??_init_config:	
   765                           ; 1 bytes @ 0x8
   766                           
   767                           
   768                           ; 1 bytes @ 0x8
   769     0078                     	ds	3
   770     007B                     ??_main:
   771                           
   772                           	psect	cstackBANK0
   773     0020                     __pcstackBANK0:	
   774                           ; 1 bytes @ 0xB
   775                           
   776     0020                     power_on_screen@i:
   777                           
   778                           ; 2 bytes @ 0x0
   779     0020                     	ds	2
   780     0022                     power_on_screen@i_132:
   781                           
   782                           ; 2 bytes @ 0x2
   783     0022                     	ds	2
   784     0024                     main@delay:
   785                           
   786                           ; 2 bytes @ 0x4
   787     0024                     	ds	2
   788     0026                     main@key:
   789                           
   790                           ; 1 bytes @ 0x6
   791     0026                     	ds	1
   792                           
   793                           	psect	maintext
   794     009A                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 31 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  delay           2    4[BANK0 ] unsigned int 
   805 ;;  key             1    6[BANK0 ] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : B00/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       3       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         0       3       0       0       0
   819 ;;Total ram usage:        3 bytes
   820 ;; Hardware stack levels required when called: 5
   821 ;; This function calls:
   822 ;;		_clcd_print
   823 ;;		_clear_screen
   824 ;;		_init_config
   825 ;;		_power_on_screen
   826 ;;		_read_digital_keypad
   827 ;;		_washing_program_display
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     009A                     _main:	
   834                           ;psect for function _main
   835                           
   836     009A                     l967:	
   837                           ;incstack = 0
   838                           ; Regs used in _main: [allreg]
   839                           
   840                           
   841                           ;main.c: 32: 
   842     009A  120A  118A  2267  120A  118A  	fcall	_init_config
   843     009F                     l969:
   844                           
   845                           ;main.c: 33:           for(unsigned int delay = 300;delay--;);;main.c: 34: 
   846     009F  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   847     00A0  00F6               	movwf	clcd_print@str
   848     00A1  3081               	movlw	129
   849     00A2  00F7               	movwf	clcd_print@addr
   850     00A3  120A  118A  21FD  120A  118A  	fcall	_clcd_print
   851     00A8                     l971:
   852                           
   853                           ;main.c: 35:           switch(operational_mode)
   854     00A8  303B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   855     00A9  00F6               	movwf	clcd_print@str
   856     00AA  30C4               	movlw	196
   857     00AB  00F7               	movwf	clcd_print@addr
   858     00AC  120A  118A  21FD  120A  118A  	fcall	_clcd_print
   859     00B1                     l973:
   860                           
   861                           ;main.c: 36:           {
   862     00B1  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   863     00B2  00F6               	movwf	clcd_print@str
   864     00B3  3091               	movlw	145
   865     00B4  00F7               	movwf	clcd_print@addr
   866     00B5  120A  118A  21FD  120A  118A  	fcall	_clcd_print
   867     00BA                     l975:	
   868                           ;main.c: 37:               case 0x01 :
   869                           
   870     00BA  3001               	movlw	1
   871     00BB  120A  118A  21D3  120A  118A  	fcall	_read_digital_keypad
   872     00C0  3A2F               	xorlw	47
   873     00C1  1D03               	skipz
   874     00C2  28C4               	goto	u231
   875     00C3  28C5               	goto	u230
   876     00C4                     u231:
   877     00C4  28BA               	goto	l975
   878     00C5                     u230:
   879     00C5                     l977:
   880                           
   881                           ;main.c: 40:               case 0x02:
   882     00C5  120A  118A  2000  120A  118A  	fcall	_clear_screen
   883     00CA                     l979:
   884                           
   885                           ;main.c: 41:                   break;
   886     00CA  120A  118A  2024  120A  118A  	fcall	_power_on_screen
   887     00CF                     l981:
   888                           
   889                           ;main.c: 46:     }
   890     00CF  3001               	movlw	1
   891     00D0  120A  118A  21D3  120A  118A  	fcall	_read_digital_keypad
   892     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   893     00D6  1303               	bcf	3,6	;RP1=0, select bank0
   894     00D7  00A6               	movwf	main@key
   895     00D8                     l983:
   896                           
   897                           ;main.c: 48:     return;
   898     00D8  302C               	movlw	44
   899     00D9  00A4               	movwf	main@delay
   900     00DA  3001               	movlw	1
   901     00DB  00A5               	movwf	main@delay+1
   902     00DC                     l985:
   903     00DC  3001               	movlw	1
   904     00DD  02A4               	subwf	main@delay,f
   905     00DE  3000               	movlw	0
   906     00DF  1C03               	skipc
   907     00E0  03A5               	decf	main@delay+1,f
   908     00E1  02A5               	subwf	main@delay+1,f
   909     00E2  0A24               	incf	main@delay,w
   910     00E3  1D03               	skipz
   911     00E4  28E9               	goto	u241
   912     00E5  0A25               	incf	main@delay+1,w
   913     00E6  1D03               	btfss	3,2
   914     00E7  28E9               	goto	u241
   915     00E8  28EA               	goto	u240
   916     00E9                     u241:
   917     00E9  28DC               	goto	l985
   918     00EA                     u240:
   919     00EA  28F2               	goto	l991
   920     00EB                     l987:
   921     00EB  0826               	movf	main@key,w
   922     00EC  120A  118A  2278  120A  118A  	fcall	_washing_program_display
   923     00F1  28CF               	goto	l981
   924     00F2                     l991:
   925     00F2  082B               	movf	_operational_mode,w
   926                           
   927                           ; Switch size 1, requested type "simple"
   928                           ; Number of cases is 3, Range of values is 1 to 3
   929                           ; switch strategies available:
   930                           ; Name         Instructions Cycles
   931                           ; simple_byte           10     6 (average)
   932                           ; direct_byte           20    11 (fixed)
   933                           ; jumptable            263     9 (fixed)
   934                           ;	Chosen strategy is simple_byte
   935     00F3  3A01               	xorlw	1	; case 1
   936     00F4  1903               	skipnz
   937     00F5  28EB               	goto	l987
   938     00F6  3A03               	xorlw	3	; case 2
   939     00F7  1903               	skipnz
   940     00F8  28CF               	goto	l981
   941     00F9  3A01               	xorlw	1	; case 3
   942     00FA  1903               	skipnz
   943     00FB  28CF               	goto	l981
   944     00FC  28CF               	goto	l981
   945     00FD  120A  118A  280C   	ljmp	start
   946     0100                     __end_of_main:
   947                           
   948                           	psect	text1
   949     0278                     __ptext1:	
   950 ;; *************** function _washing_program_display *****************
   951 ;; Defined at:
   952 ;;		line 33 in file "washing_machine_function_def.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  key             1    wreg     unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  key             1    0[COMMON] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 3
   973 ;; This function calls:
   974 ;;		_clcd_print
   975 ;;		_clear_screen
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981     0278                     _washing_program_display:	
   982                           ;psect for function _washing_program_display
   983                           
   984     0278                     l963:	
   985                           ;incstack = 0
   986                           ; Regs used in _washing_program_display: [allreg]
   987                           
   988                           
   989                           ;washing_machine_function_def.c: 33: void washing_program_display(unsigned char key);was
      +                          hing_machine_function_def.c: 34: {;washing_machine_function_def.c: 35:     clear_screen(
      +                          );
   990     0278  120A  118A  2000  120A  118A  	fcall	_clear_screen
   991     027D                     l965:
   992                           
   993                           ;washing_machine_function_def.c: 36:     clcd_print("WASHING PROGRAM",(0x80 + 0));
   994     027D  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   995     027E  00F6               	movwf	clcd_print@str
   996     027F  3080               	movlw	128
   997     0280  00F7               	movwf	clcd_print@addr
   998     0281  120A  118A  21FD  120A  118A  	fcall	_clcd_print
   999     0286                     l145:
  1000     0286  0008               	return
  1001     0287                     __end_of_washing_program_display:
  1002                           
  1003                           	psect	text2
  1004     01D3                     __ptext2:	
  1005 ;; *************** function _read_digital_keypad *****************
  1006 ;; Defined at:
  1007 ;;		line 10 in file "digital_keypad.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  mode            1    wreg     unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  mode            1    3[COMMON] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      unsigned char 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         1       0       0       0       0
  1023 ;;      Temps:          1       0       0       0       0
  1024 ;;      Totals:         2       0       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035     01D3                     _read_digital_keypad:	
  1036                           ;psect for function _read_digital_keypad
  1037                           
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  1041                           ;read_digital_keypad@mode stored from wreg
  1042     01D3  00F3               	movwf	read_digital_keypad@mode
  1043     01D4                     l903:
  1044                           
  1045                           ;digital_keypad.c: 10: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 11: {;digital_keypad.c: 12:     static unsigned char once = 1;;digital_keypad.c: 
      +                          14:     if (mode == 0)
  1046     01D4  0873               	movf	read_digital_keypad@mode,w
  1047     01D5  1D03               	btfss	3,2
  1048     01D6  29D8               	goto	u171
  1049     01D7  29D9               	goto	u170
  1050     01D8                     u171:
  1051     01D8  29DE               	goto	l911
  1052     01D9                     u170:
  1053     01D9                     l905:
  1054                           
  1055                           ;digital_keypad.c: 15:     {;digital_keypad.c: 16:         return PORTB & 0x3F;
  1056     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1057     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1058     01DB  0806               	movf	6,w	;volatile
  1059     01DC  393F               	andlw	63
  1060     01DD  29FC               	goto	l89
  1061     01DE                     l911:
  1062                           
  1063                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
  1064     01DE  303F               	movlw	63
  1065     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1066     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1067     01E1  0506               	andwf	6,w	;volatile
  1068     01E2  00F2               	movwf	??_read_digital_keypad
  1069     01E3  303F               	movlw	63
  1070     01E4  0672               	xorwf	??_read_digital_keypad,w
  1071     01E5  1903               	btfsc	3,2
  1072     01E6  29E8               	goto	u181
  1073     01E7  29E9               	goto	u180
  1074     01E8                     u181:
  1075     01E8  29F0               	goto	l923
  1076     01E9                     u180:
  1077     01E9                     l913:
  1078     01E9  087B               	movf	read_digital_keypad@once,w
  1079     01EA  1903               	btfsc	3,2
  1080     01EB  29ED               	goto	u191
  1081     01EC  29EE               	goto	u190
  1082     01ED                     u191:
  1083     01ED  29F0               	goto	l923
  1084     01EE                     u190:
  1085     01EE                     l915:
  1086                           
  1087                           ;digital_keypad.c: 21:         {;digital_keypad.c: 22:             once = 0;
  1088     01EE  01FB               	clrf	read_digital_keypad@once
  1089     01EF  29D9               	goto	l905
  1090     01F0                     l923:
  1091     01F0  303F               	movlw	63
  1092     01F1  0506               	andwf	6,w	;volatile
  1093     01F2  00F2               	movwf	??_read_digital_keypad
  1094     01F3  303F               	movlw	63
  1095     01F4  0672               	xorwf	??_read_digital_keypad,w
  1096     01F5  1D03               	btfss	3,2
  1097     01F6  29F8               	goto	u201
  1098     01F7  29F9               	goto	u200
  1099     01F8                     u201:
  1100     01F8  29FB               	goto	l927
  1101     01F9                     u200:
  1102     01F9                     l925:
  1103                           
  1104                           ;digital_keypad.c: 27:         {;digital_keypad.c: 28:             once = 1;
  1105     01F9  3001               	movlw	1
  1106     01FA  00FB               	movwf	read_digital_keypad@once
  1107     01FB                     l927:
  1108                           
  1109                           ;digital_keypad.c: 32:     return 0x3F;
  1110     01FB  303F               	movlw	63
  1111     01FC                     l89:
  1112     01FC  0008               	return
  1113     01FD                     __end_of_read_digital_keypad:
  1114                           
  1115                           	psect	text3
  1116     0024                     __ptext3:	
  1117 ;; *************** function _power_on_screen *****************
  1118 ;; Defined at:
  1119 ;;		line 12 in file "washing_machine_function_def.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  i               2    2[BANK0 ] unsigned int 
  1124 ;;  i               2    0[BANK0 ] unsigned int 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       4       0       0       0
  1136 ;;      Temps:          3       0       0       0       0
  1137 ;;      Totals:         3       4       0       0       0
  1138 ;;Total ram usage:        7 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 3
  1141 ;; This function calls:
  1142 ;;		_clcd_print
  1143 ;;		_clcd_putch
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149     0024                     _power_on_screen:	
  1150                           ;psect for function _power_on_screen
  1151                           
  1152     0024                     l931:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1155                           
  1156                           
  1157                           ;washing_machine_function_def.c: 15:     for(unsigned int i=0;i<16;i++)
  1158     0024  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0025  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0026  01A0               	clrf	power_on_screen@i
  1161     0027  01A1               	clrf	power_on_screen@i+1
  1162     0028                     l937:
  1163                           
  1164                           ;washing_machine_function_def.c: 16:     {clcd_putch(0XFF,(0x80 + i));
  1165     0028  0820               	movf	power_on_screen@i,w
  1166     0029  3E80               	addlw	128
  1167     002A  00F6               	movwf	clcd_putch@addr
  1168     002B  30FF               	movlw	255
  1169     002C  120A  118A  2256  120A  118A  	fcall	_clcd_putch
  1170     0031                     l939:
  1171                           
  1172                           ;washing_machine_function_def.c: 17:       _delay((unsigned long)((100)*(20000000/4000.0
      +                          )));
  1173     0031  3003               	movlw	3
  1174     0032  00FA               	movwf	??_power_on_screen+2
  1175     0033  308A               	movlw	138
  1176     0034  00F9               	movwf	??_power_on_screen+1
  1177     0035  3055               	movlw	85
  1178     0036  00F8               	movwf	??_power_on_screen
  1179     0037                     u277:
  1180     0037  0BF8               	decfsz	??_power_on_screen,f
  1181     0038  2837               	goto	u277
  1182     0039  0BF9               	decfsz	??_power_on_screen+1,f
  1183     003A  2837               	goto	u277
  1184     003B  0BFA               	decfsz	??_power_on_screen+2,f
  1185     003C  2837               	goto	u277
  1186     003D  283E               	nop2
  1187     003E                     l941:
  1188                           
  1189                           ;washing_machine_function_def.c: 18:     }
  1190     003E  3001               	movlw	1
  1191     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0040  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0041  07A0               	addwf	power_on_screen@i,f
  1194     0042  1803               	skipnc
  1195     0043  0AA1               	incf	power_on_screen@i+1,f
  1196     0044  3000               	movlw	0
  1197     0045  07A1               	addwf	power_on_screen@i+1,f
  1198     0046                     l943:
  1199     0046  3000               	movlw	0
  1200     0047  0221               	subwf	power_on_screen@i+1,w
  1201     0048  3010               	movlw	16
  1202     0049  1903               	skipnz
  1203     004A  0220               	subwf	power_on_screen@i,w
  1204     004B  1C03               	skipc
  1205     004C  284E               	goto	u211
  1206     004D  284F               	goto	u210
  1207     004E                     u211:
  1208     004E  2828               	goto	l937
  1209     004F                     u210:
  1210     004F                     l945:
  1211                           
  1212                           ;washing_machine_function_def.c: 20:     clcd_print("Powering ON",(0xC0 + 1));
  1213     004F  302F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1214     0050  00F6               	movwf	clcd_print@str
  1215     0051  30C1               	movlw	193
  1216     0052  00F7               	movwf	clcd_print@addr
  1217     0053  120A  118A  21FD  120A  118A  	fcall	_clcd_print
  1218                           
  1219                           ;washing_machine_function_def.c: 21:     clcd_print("Washing Machine",(0x90 + 1));
  1220     0058  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1221     0059  00F6               	movwf	clcd_print@str
  1222     005A  3091               	movlw	145
  1223     005B  00F7               	movwf	clcd_print@addr
  1224     005C  120A  118A  21FD  120A  118A  	fcall	_clcd_print
  1225     0061                     l947:
  1226                           
  1227                           ;washing_machine_function_def.c: 23:     for(unsigned int i=0;i<16;i++)
  1228     0061  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0062  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0063  01A2               	clrf	power_on_screen@i_132
  1231     0064  01A3               	clrf	power_on_screen@i_132+1
  1232     0065                     l953:
  1233                           
  1234                           ;washing_machine_function_def.c: 24:     {clcd_putch(0XFF,(0xD0 + i));
  1235     0065  0822               	movf	power_on_screen@i_132,w
  1236     0066  3ED0               	addlw	208
  1237     0067  00F6               	movwf	clcd_putch@addr
  1238     0068  30FF               	movlw	255
  1239     0069  120A  118A  2256  120A  118A  	fcall	_clcd_putch
  1240     006E                     l955:
  1241                           
  1242                           ;washing_machine_function_def.c: 25:       _delay((unsigned long)((100)*(20000000/4000.0
      +                          )));
  1243     006E  3003               	movlw	3
  1244     006F  00FA               	movwf	??_power_on_screen+2
  1245     0070  308A               	movlw	138
  1246     0071  00F9               	movwf	??_power_on_screen+1
  1247     0072  3055               	movlw	85
  1248     0073  00F8               	movwf	??_power_on_screen
  1249     0074                     u287:
  1250     0074  0BF8               	decfsz	??_power_on_screen,f
  1251     0075  2874               	goto	u287
  1252     0076  0BF9               	decfsz	??_power_on_screen+1,f
  1253     0077  2874               	goto	u287
  1254     0078  0BFA               	decfsz	??_power_on_screen+2,f
  1255     0079  2874               	goto	u287
  1256     007A  287B               	nop2
  1257     007B                     l957:
  1258                           
  1259                           ;washing_machine_function_def.c: 26:     }
  1260     007B  3001               	movlw	1
  1261     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1262     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1263     007E  07A2               	addwf	power_on_screen@i_132,f
  1264     007F  1803               	skipnc
  1265     0080  0AA3               	incf	power_on_screen@i_132+1,f
  1266     0081  3000               	movlw	0
  1267     0082  07A3               	addwf	power_on_screen@i_132+1,f
  1268     0083                     l959:
  1269     0083  3000               	movlw	0
  1270     0084  0223               	subwf	power_on_screen@i_132+1,w
  1271     0085  3010               	movlw	16
  1272     0086  1903               	skipnz
  1273     0087  0222               	subwf	power_on_screen@i_132,w
  1274     0088  1C03               	skipc
  1275     0089  288B               	goto	u221
  1276     008A  288C               	goto	u220
  1277     008B                     u221:
  1278     008B  2865               	goto	l953
  1279     008C                     u220:
  1280     008C                     l961:
  1281                           
  1282                           ;washing_machine_function_def.c: 28:     _delay((unsigned long)((2000)*(20000000/4000.0)
      +                          ));
  1283     008C  3033               	movlw	51
  1284     008D  00FA               	movwf	??_power_on_screen+2
  1285     008E  30BB               	movlw	187
  1286     008F  00F9               	movwf	??_power_on_screen+1
  1287     0090  30DF               	movlw	223
  1288     0091  00F8               	movwf	??_power_on_screen
  1289     0092                     u297:
  1290     0092  0BF8               	decfsz	??_power_on_screen,f
  1291     0093  2892               	goto	u297
  1292     0094  0BF9               	decfsz	??_power_on_screen+1,f
  1293     0095  2892               	goto	u297
  1294     0096  0BFA               	decfsz	??_power_on_screen+2,f
  1295     0097  2892               	goto	u297
  1296     0098  2899               	nop2
  1297     0099                     l142:
  1298     0099  0008               	return
  1299     009A                     __end_of_power_on_screen:
  1300                           
  1301                           	psect	text4
  1302     0256                     __ptext4:	
  1303 ;; *************** function _clcd_putch *****************
  1304 ;; Defined at:
  1305 ;;		line 49 in file "clcd.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  data            1    wreg     const unsigned char 
  1308 ;;  addr            1    6[COMMON] unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  data            1    7[COMMON] const unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         1       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         2       0       0       0       0
  1324 ;;Total ram usage:        2 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 2
  1327 ;; This function calls:
  1328 ;;		_clcd_write
  1329 ;; This function is called by:
  1330 ;;		_power_on_screen
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     0256                     _clcd_putch:	
  1335                           ;psect for function _clcd_putch
  1336                           
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1340                           ;clcd_putch@data stored from wreg
  1341     0256  00F7               	movwf	clcd_putch@data
  1342     0257                     l893:
  1343                           
  1344                           ;clcd.c: 49: void clcd_putch(const char data, unsigned char addr);clcd.c: 50: {;clcd.c: 
      +                          51:     clcd_write(addr, 0);
  1345     0257  01F2               	clrf	clcd_write@mode
  1346     0258  0876               	movf	clcd_putch@addr,w
  1347     0259  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1348                           
  1349                           ;clcd.c: 52:     clcd_write(data, 1);
  1350     025E  01F2               	clrf	clcd_write@mode
  1351     025F  0AF2               	incf	clcd_write@mode,f
  1352     0260  0877               	movf	clcd_putch@data,w
  1353     0261  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1354     0266                     l70:
  1355     0266  0008               	return
  1356     0267                     __end_of_clcd_putch:
  1357                           
  1358                           	psect	text5
  1359     01FD                     __ptext5:	
  1360 ;; *************** function _clcd_print *****************
  1361 ;; Defined at:
  1362 ;;		line 55 in file "clcd.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  str             1    6[COMMON] PTR const unsigned char 
  1365 ;;		 -> STR_6(16), STR_5(16), STR_4(12), STR_3(16), 
  1366 ;;		 -> STR_2(9), STR_1(14), 
  1367 ;;  addr            1    7[COMMON] unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         2       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0
  1382 ;;      Totals:         2       0       0       0       0
  1383 ;;Total ram usage:        2 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 2
  1386 ;; This function calls:
  1387 ;;		_clcd_write
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;;		_power_on_screen
  1391 ;;		_washing_program_display
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     01FD                     _clcd_print:	
  1396                           ;psect for function _clcd_print
  1397                           
  1398     01FD                     l885:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  1404     01FD  01F2               	clrf	clcd_write@mode
  1405     01FE  0877               	movf	clcd_print@addr,w
  1406     01FF  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1407                           
  1408                           ;clcd.c: 59:     while (*str != '\0')
  1409     0204  2A15               	goto	l891
  1410     0205                     l887:
  1411                           
  1412                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
  1413     0205  01F2               	clrf	clcd_write@mode
  1414     0206  0AF2               	incf	clcd_write@mode,f
  1415     0207  0876               	movf	clcd_print@str,w
  1416     0208  0084               	movwf	4
  1417     0209  120A  118A  2157  120A  118A  	fcall	stringdir
  1418     020E  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1419     0213                     l889:
  1420                           
  1421                           ;clcd.c: 62:         str++;
  1422     0213  3001               	movlw	1
  1423     0214  07F6               	addwf	clcd_print@str,f
  1424     0215                     l891:
  1425                           
  1426                           ;clcd.c: 59:     while (*str != '\0')
  1427     0215  0876               	movf	clcd_print@str,w
  1428     0216  0084               	movwf	4
  1429     0217  120A  118A  2157  120A  118A  	fcall	stringdir
  1430     021C  3A00               	xorlw	0
  1431     021D  1D03               	skipz
  1432     021E  2A20               	goto	u161
  1433     021F  2A21               	goto	u160
  1434     0220                     u161:
  1435     0220  2A05               	goto	l887
  1436     0221                     u160:
  1437     0221                     l76:
  1438     0221  0008               	return
  1439     0222                     __end_of_clcd_print:
  1440                           
  1441                           	psect	text6
  1442     0267                     __ptext6:	
  1443 ;; *************** function _init_config *****************
  1444 ;; Defined at:
  1445 ;;		line 18 in file "main.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 4
  1466 ;; This function calls:
  1467 ;;		_init_clcd
  1468 ;;		_init_digital_keypad
  1469 ;;		_init_timer2
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475     0267                     _init_config:	
  1476                           ;psect for function _init_config
  1477                           
  1478     0267                     l895:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1481                           
  1482                           
  1483                           ;main.c: 20:     clcd_print("Power ON",(0xC0 + 4));
  1484     0267  120A  118A  2287  120A  118A  	fcall	_init_clcd
  1485                           
  1486                           ;main.c: 22:     while (read_digital_keypad(1) !=0x2F);
  1487     026C  120A  118A  2292  120A  118A  	fcall	_init_digital_keypad
  1488     0271                     l897:
  1489                           
  1490                           ;main.c: 24: 
  1491     0271  120A  118A  2242  120A  118A  	fcall	_init_timer2
  1492     0276                     l899:
  1493     0276                     l901:	
  1494                           ;main.c: 26:     power_on_screen();
  1495                           
  1496                           
  1497                           ;main.c: 27: 
  1498     0276  170B               	bsf	11,6	;volatile
  1499     0277                     l25:
  1500     0277  0008               	return
  1501     0278                     __end_of_init_config:
  1502                           
  1503                           	psect	text7
  1504     0242                     __ptext7:	
  1505 ;; *************** function _init_timer2 *****************
  1506 ;; Defined at:
  1507 ;;		line 4 in file "timers.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		None
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0
  1524 ;;      Totals:         0       0       0       0       0
  1525 ;;Total ram usage:        0 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_init_config
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     0242                     _init_timer2:	
  1536                           ;psect for function _init_timer2
  1537                           
  1538     0242                     l883:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _init_timer2: []
  1541                           
  1542                           
  1543                           ;timers.c: 9:     TOUTPS3 = 0;
  1544     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0244  1312               	bcf	18,6	;volatile
  1547                           
  1548                           ;timers.c: 10:     TOUTPS2 = 0;
  1549     0245  1292               	bcf	18,5	;volatile
  1550                           
  1551                           ;timers.c: 11:     TOUTPS1 = 0;
  1552     0246  1212               	bcf	18,4	;volatile
  1553                           
  1554                           ;timers.c: 12:     TOUTPS0 = 0;
  1555     0247  1192               	bcf	18,3	;volatile
  1556                           
  1557                           ;timers.c: 16:     TMR2ON = 1;
  1558     0248  1512               	bsf	18,2	;volatile
  1559                           
  1560                           ;timers.c: 19:     T2CKPS1 = 0;
  1561     0249  1092               	bcf	18,1	;volatile
  1562                           
  1563                           ;timers.c: 20:     T2CKPS0 = 0;
  1564     024A  1012               	bcf	18,0	;volatile
  1565                           
  1566                           ;timers.c: 23:     TMR2IE = 1;
  1567     024B  1683               	bsf	3,5	;RP0=1, select bank1
  1568     024C  1303               	bcf	3,6	;RP1=0, select bank1
  1569     024D  148C               	bsf	12,1	;volatile
  1570                           
  1571                           ;timers.c: 27:     TMR2IF = 0;
  1572     024E  1283               	bcf	3,5	;RP0=0, select bank0
  1573     024F  1303               	bcf	3,6	;RP1=0, select bank0
  1574     0250  108C               	bcf	12,1	;volatile
  1575                           
  1576                           ;timers.c: 30:     PR2 = 250;
  1577     0251  30FA               	movlw	250
  1578     0252  1683               	bsf	3,5	;RP0=1, select bank1
  1579     0253  1303               	bcf	3,6	;RP1=0, select bank1
  1580     0254  0092               	movwf	18	;volatile
  1581     0255                     l116:
  1582     0255  0008               	return
  1583     0256                     __end_of_init_timer2:
  1584                           
  1585                           	psect	text8
  1586     0292                     __ptext8:	
  1587 ;; *************** function _init_digital_keypad *****************
  1588 ;; Defined at:
  1589 ;;		line 4 in file "digital_keypad.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_init_config
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617     0292                     _init_digital_keypad:	
  1618                           ;psect for function _init_digital_keypad
  1619                           
  1620     0292                     l881:	
  1621                           ;incstack = 0
  1622                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1623                           
  1624                           
  1625                           ;digital_keypad.c: 7:     TRISB = TRISB | 0x3F;
  1626     0292  1683               	bsf	3,5	;RP0=1, select bank1
  1627     0293  1303               	bcf	3,6	;RP1=0, select bank1
  1628     0294  0806               	movf	6,w	;volatile
  1629     0295  383F               	iorlw	63
  1630     0296  0086               	movwf	6	;volatile
  1631     0297                     l83:
  1632     0297  0008               	return
  1633     0298                     __end_of_init_digital_keypad:
  1634                           
  1635                           	psect	text9
  1636     0287                     __ptext9:	
  1637 ;; *************** function _init_clcd *****************
  1638 ;; Defined at:
  1639 ;;		line 37 in file "clcd.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0
  1656 ;;      Totals:         0       0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 3
  1660 ;; This function calls:
  1661 ;;		_init_display_controller
  1662 ;; This function is called by:
  1663 ;;		_init_config
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     0287                     _init_clcd:	
  1668                           ;psect for function _init_clcd
  1669                           
  1670     0287                     l873:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1673                           
  1674                           
  1675                           ;clcd.c: 40:     TRISD = 0x00;
  1676     0287  1683               	bsf	3,5	;RP0=1, select bank1
  1677     0288  1303               	bcf	3,6	;RP1=0, select bank1
  1678     0289  0188               	clrf	8	;volatile
  1679     028A                     l875:
  1680                           
  1681                           ;clcd.c: 43:     TRISE2 = 0;
  1682     028A  1109               	bcf	9,2	;volatile
  1683     028B                     l877:
  1684                           
  1685                           ;clcd.c: 44:     TRISE1 = 0;
  1686     028B  1089               	bcf	9,1	;volatile
  1687     028C                     l879:
  1688                           
  1689                           ;clcd.c: 46:     init_display_controller();
  1690     028C  120A  118A  2100  120A  118A  	fcall	_init_display_controller
  1691     0291                     l67:
  1692     0291  0008               	return
  1693     0292                     __end_of_init_clcd:
  1694                           
  1695                           	psect	text10
  1696     0100                     __ptext10:	
  1697 ;; *************** function _init_display_controller *****************
  1698 ;; Defined at:
  1699 ;;		line 16 in file "clcd.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 2
  1720 ;; This function calls:
  1721 ;;		_clcd_write
  1722 ;; This function is called by:
  1723 ;;		_init_clcd
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     0100                     _init_display_controller:	
  1728                           ;psect for function _init_display_controller
  1729                           
  1730     0100                     l853:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1736     0100  30C3               	movlw	195
  1737     0101  00F7               	movwf	??_init_display_controller+1
  1738     0102  30CD               	movlw	205
  1739     0103  00F6               	movwf	??_init_display_controller
  1740     0104                     u307:
  1741     0104  0BF6               	decfsz	??_init_display_controller,f
  1742     0105  2904               	goto	u307
  1743     0106  0BF7               	decfsz	??_init_display_controller+1,f
  1744     0107  2904               	goto	u307
  1745     0108                     l855:
  1746                           
  1747                           ;clcd.c: 22:     clcd_write(0x33, 0);
  1748     0108  01F2               	clrf	clcd_write@mode
  1749     0109  3033               	movlw	51
  1750     010A  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1751     010F                     l857:
  1752                           
  1753                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1754     010F  301B               	movlw	27
  1755     0110  00F7               	movwf	??_init_display_controller+1
  1756     0111  309E               	movlw	158
  1757     0112  00F6               	movwf	??_init_display_controller
  1758     0113                     u317:
  1759     0113  0BF6               	decfsz	??_init_display_controller,f
  1760     0114  2913               	goto	u317
  1761     0115  0BF7               	decfsz	??_init_display_controller+1,f
  1762     0116  2913               	goto	u317
  1763     0117  0000               	nop
  1764                           
  1765                           ;clcd.c: 24:     clcd_write(0x33, 0);
  1766     0118  01F2               	clrf	clcd_write@mode
  1767     0119  3033               	movlw	51
  1768     011A  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1769     011F                     l859:
  1770                           
  1771                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1772     011F  30A6               	movlw	166
  1773     0120  00F6               	movwf	??_init_display_controller
  1774     0121                     u327:
  1775     0121  0BF6               	decfsz	??_init_display_controller,f
  1776     0122  2921               	goto	u327
  1777     0123  0000               	nop
  1778     0124                     l861:
  1779                           
  1780                           ;clcd.c: 26:     clcd_write(0x33, 0);
  1781     0124  01F2               	clrf	clcd_write@mode
  1782     0125  3033               	movlw	51
  1783     0126  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1784     012B                     l863:
  1785                           
  1786                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1787     012B  292C               	nop2	;2 cycle nop
  1788     012C  292D               	nop2	;2 cycle nop
  1789     012D  0000               	nop
  1790     012E                     l865:
  1791                           
  1792                           ;clcd.c: 29:     clcd_write(0x3C, 0);
  1793     012E  01F2               	clrf	clcd_write@mode
  1794     012F  303C               	movlw	60
  1795     0130  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1796     0135                     l867:
  1797                           
  1798                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1799     0135  30A6               	movlw	166
  1800     0136  00F6               	movwf	??_init_display_controller
  1801     0137                     u337:
  1802     0137  0BF6               	decfsz	??_init_display_controller,f
  1803     0138  2937               	goto	u337
  1804     0139  0000               	nop
  1805                           
  1806                           ;clcd.c: 31:     clcd_write(0x01, 0);
  1807     013A  01F2               	clrf	clcd_write@mode
  1808     013B  3001               	movlw	1
  1809     013C  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1810     0141                     l869:
  1811                           
  1812                           ;clcd.c: 32:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1813     0141  3004               	movlw	4
  1814     0142  00F7               	movwf	??_init_display_controller+1
  1815     0143  303D               	movlw	61
  1816     0144  00F6               	movwf	??_init_display_controller
  1817     0145                     u347:
  1818     0145  0BF6               	decfsz	??_init_display_controller,f
  1819     0146  2945               	goto	u347
  1820     0147  0BF7               	decfsz	??_init_display_controller+1,f
  1821     0148  2945               	goto	u347
  1822     0149  294A               	nop2
  1823     014A                     l871:
  1824                           
  1825                           ;clcd.c: 33:     clcd_write(0x0C, 0);
  1826     014A  01F2               	clrf	clcd_write@mode
  1827     014B  300C               	movlw	12
  1828     014C  120A  118A  2222  120A  118A  	fcall	_clcd_write
  1829                           
  1830                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1831     0151  30A6               	movlw	166
  1832     0152  00F6               	movwf	??_init_display_controller
  1833     0153                     u357:
  1834     0153  0BF6               	decfsz	??_init_display_controller,f
  1835     0154  2953               	goto	u357
  1836     0155  0000               	nop
  1837     0156                     l64:
  1838     0156  0008               	return
  1839     0157                     __end_of_init_display_controller:
  1840                           
  1841                           	psect	text11
  1842     0222                     __ptext11:	
  1843 ;; *************** function _clcd_write *****************
  1844 ;; Defined at:
  1845 ;;		line 4 in file "clcd.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  byte            1    wreg     unsigned char 
  1848 ;;  mode            1    2[COMMON] unsigned char 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  byte            1    5[COMMON] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         1       0       0       0       0
  1861 ;;      Locals:         1       0       0       0       0
  1862 ;;      Temps:          2       0       0       0       0
  1863 ;;      Totals:         4       0       0       0       0
  1864 ;;Total ram usage:        4 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_init_display_controller
  1871 ;;		_clcd_putch
  1872 ;;		_clcd_print
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876     0222                     _clcd_write:	
  1877                           ;psect for function _clcd_write
  1878                           
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _clcd_write: [wreg]
  1882                           ;clcd_write@byte stored from wreg
  1883     0222  00F5               	movwf	clcd_write@byte
  1884     0223                     l845:
  1885                           
  1886                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  1887     0223  1872               	btfsc	clcd_write@mode,0
  1888     0224  2A26               	goto	u141
  1889     0225  2A2A               	goto	u140
  1890     0226                     u141:
  1891     0226  1283               	bcf	3,5	;RP0=0, select bank0
  1892     0227  1303               	bcf	3,6	;RP1=0, select bank0
  1893     0228  1509               	bsf	9,2	;volatile
  1894     0229  2A2D               	goto	u154
  1895     022A                     u140:
  1896     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1897     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1898     022C  1109               	bcf	9,2	;volatile
  1899     022D                     u154:
  1900     022D                     l847:
  1901                           
  1902                           ;clcd.c: 7:     PORTD = byte;
  1903     022D  0875               	movf	clcd_write@byte,w
  1904     022E  0088               	movwf	8	;volatile
  1905     022F                     l849:
  1906                           
  1907                           ;clcd.c: 9:     RE1 = 1;
  1908     022F  1489               	bsf	9,1	;volatile
  1909                           
  1910                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1911     0230  30A6               	movlw	166
  1912     0231  00F3               	movwf	??_clcd_write
  1913     0232                     u367:
  1914     0232  0BF3               	decfsz	??_clcd_write,f
  1915     0233  2A32               	goto	u367
  1916     0234  0000               	nop
  1917     0235                     l851:
  1918                           
  1919                           ;clcd.c: 11:     RE1 = 0;
  1920     0235  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0236  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0237  1089               	bcf	9,1	;volatile
  1923                           
  1924                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1925     0238  301B               	movlw	27
  1926     0239  00F4               	movwf	??_clcd_write+1
  1927     023A  309E               	movlw	158
  1928     023B  00F3               	movwf	??_clcd_write
  1929     023C                     u377:
  1930     023C  0BF3               	decfsz	??_clcd_write,f
  1931     023D  2A3C               	goto	u377
  1932     023E  0BF4               	decfsz	??_clcd_write+1,f
  1933     023F  2A3C               	goto	u377
  1934     0240  0000               	nop
  1935     0241                     l61:
  1936     0241  0008               	return
  1937     0242                     __end_of_clcd_write:
  1938                           
  1939                           	psect	text12
  1940     01A0                     __ptext12:	
  1941 ;; *************** function _isr *****************
  1942 ;; Defined at:
  1943 ;;		line 4 in file "isr.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0
  1959 ;;      Temps:          2       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		Interrupt level 1
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970     01A0                     _isr:	
  1971                           ;psect for function _isr
  1972                           
  1973     01A0                     i1l993:
  1974                           
  1975                           ;isr.c: 6:     static unsigned long int count = 0;;isr.c: 8:     if(TMR2IF ==1)
  1976     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1977     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1978     01A2  1C8C               	btfss	12,1	;volatile
  1979     01A3  29A5               	goto	u25_21
  1980     01A4  29A6               	goto	u25_20
  1981     01A5                     u25_21:
  1982     01A5  29CC               	goto	i1l127
  1983     01A6                     u25_20:
  1984     01A6                     i1l995:
  1985                           
  1986                           ;isr.c: 9:     {;isr.c: 10:         if( ++count == 1250)
  1987     01A6  3001               	movlw	1
  1988     01A7  07A7               	addwf	isr@count,f
  1989     01A8  3000               	movlw	0
  1990     01A9  1803               	skipnc
  1991     01AA  3001               	movlw	1
  1992     01AB  07A8               	addwf	isr@count+1,f
  1993     01AC  3000               	movlw	0
  1994     01AD  1803               	skipnc
  1995     01AE  3001               	movlw	1
  1996     01AF  07A9               	addwf	isr@count+2,f
  1997     01B0  3000               	movlw	0
  1998     01B1  1803               	skipnc
  1999     01B2  3001               	movlw	1
  2000     01B3  07AA               	addwf	isr@count+3,f
  2001     01B4  30E2               	movlw	226
  2002     01B5  0627               	xorwf	isr@count,w
  2003     01B6  3004               	movlw	4
  2004     01B7  1903               	skipnz
  2005     01B8  0628               	xorwf	isr@count+1,w
  2006     01B9  0429               	iorwf	isr@count+2,w
  2007     01BA  042A               	iorwf	isr@count+3,w
  2008     01BB  1D03               	btfss	3,2
  2009     01BC  29BE               	goto	u26_21
  2010     01BD  29BF               	goto	u26_20
  2011     01BE                     u26_21:
  2012     01BE  29C9               	goto	i1l999
  2013     01BF                     u26_20:
  2014     01BF                     i1l997:
  2015                           
  2016                           ;isr.c: 11:         {;isr.c: 12:             count = 0;
  2017     01BF  3000               	movlw	0
  2018     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2019     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2020     01C2  00AA               	movwf	isr@count+3
  2021     01C3  3000               	movlw	0
  2022     01C4  00A9               	movwf	isr@count+2
  2023     01C5  3000               	movlw	0
  2024     01C6  00A8               	movwf	isr@count+1
  2025     01C7  3000               	movlw	0
  2026     01C8  00A7               	movwf	isr@count
  2027     01C9                     i1l999:
  2028                           
  2029                           ;isr.c: 17:         TMR2IF = 0;
  2030     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2031     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2032     01CB  108C               	bcf	12,1	;volatile
  2033     01CC                     i1l127:
  2034     01CC  0871               	movf	??_isr+1,w
  2035     01CD  008A               	movwf	10
  2036     01CE  0E70               	swapf	??_isr,w
  2037     01CF  0083               	movwf	3
  2038     01D0  0EFE               	swapf	btemp,f
  2039     01D1  0E7E               	swapf	btemp,w
  2040     01D2  0009               	retfie
  2041     01D3                     __end_of_isr:
  2042     0002                     ___latbits      equ	2
  2043     007E                     btemp           set	126	;btemp
  2044     007E                     wtemp0          set	126
  2045                           
  2046                           	psect	intentry
  2047     0004                     __pintentry:	
  2048                           ;incstack = 0
  2049                           ; Regs used in _isr: [wreg+status,2+status,0]
  2050                           
  2051     0004                     interrupt_function:
  2052     007E                     saved_w         set	btemp
  2053     0004  00FE               	movwf	btemp
  2054     0005  0E03               	swapf	3,w
  2055     0006  00F0               	movwf	??_isr
  2056     0007  080A               	movf	10,w
  2057     0008  00F1               	movwf	??_isr+1
  2058     0009  120A  118A  29A0   	ljmp	_isr
  2059                           
  2060                           	psect	config
  2061                           
  2062                           ;Config register CONFIG @ 0x2007
  2063                           ;	Oscillator Selection bits
  2064                           ;	FOSC = 0x3, unprogrammed default
  2065                           ;	Watchdog Timer Enable bit
  2066                           ;	WDTE = OFF, WDT disabled
  2067                           ;	Power-up Timer Enable bit
  2068                           ;	PWRTE = 0x1, unprogrammed default
  2069                           ;	Brown-out Reset Enable bit
  2070                           ;	BOREN = 0x1, unprogrammed default
  2071                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2072                           ;	LVP = 0x1, unprogrammed default
  2073                           ;	Data EEPROM Memory Code Protection bit
  2074                           ;	CPD = 0x1, unprogrammed default
  2075                           ;	Flash Program Memory Write Enable bits
  2076                           ;	WRT = 0x3, unprogrammed default
  2077                           ;	In-Circuit Debugger Mode bit
  2078                           ;	DEBUG = 0x1, unprogrammed default
  2079                           ;	Flash Program Memory Code Protection bit
  2080                           ;	CP = 0x1, unprogrammed default
  2081     2007                     	org	8199
  2082     2007  3FFB               	dw	16379

Data Sizes:
    Strings     67
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      7      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[14]), STR_2(CODE[9]), STR_3(CODE[16]), STR_4(CODE[12]), 
		 -> STR_5(CODE[16]), STR_6(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_power_on_screen
    _washing_program_display->_clcd_print
    _power_on_screen->_clcd_print
    _power_on_screen->_clcd_putch
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_power_on_screen

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     806
                                              4 BANK0      3     3      0
                         _clcd_print
                       _clear_screen
                        _init_config
                    _power_on_screen
                _read_digital_keypad
            _washing_program_display
 ---------------------------------------------------------------------------------
 (1) _washing_program_display                              1     1      0     140
                         _clcd_print
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      29
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      7     7      0     390
                                              8 COMMON     3     3      0
                                              0 BANK0      4     4      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     114
                                              6 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     0      2     140
                                              6 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0      61
                          _init_clcd
                _init_digital_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      61
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0      61
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1      61
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_timer2
   _power_on_screen
     _clcd_print
     _clcd_putch
       _clcd_write
   _read_digital_keypad
   _washing_program_display
     _clcd_print
     _clear_screen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      7      12     15.0%
BITBANK0            80      0       0      0.0%
COMMON              14     11      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      24      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jun 29 13:41:23 2025

                              pc 0002                   clcd_print@addr 0077                               l25 0277  
                             l61 0241                               l70 0266                               l64 0156  
                             l67 0291                               l83 0297                               l76 0221  
                             l89 01FC                               fsr 0004                              l116 0255  
                            l142 0099                              l145 0286                              l901 0276  
                            l911 01DE                              l903 01D4                              l913 01E9  
                            l905 01D9                              l851 0235                              l931 0024  
                            l915 01EE                              l923 01F0                              l845 0223  
                            l861 0124                              l853 0100                              l941 003E  
                            l925 01F9                              l847 022D                              l871 014A  
                            l863 012B                              l855 0108                              l943 0046  
                            l927 01FB                              l849 022F                              l865 012E  
                            l857 010F                              l873 0287                              l881 0292  
                            l961 008C                              l953 0065                              l945 004F  
                            l937 0028                              l867 0135                              l859 011F  
                            l875 028A                              l883 0242                              l891 0215  
                            l955 006E                              l947 0061                              l939 0031  
                            l963 0278                              l971 00A8                              l869 0141  
                            l877 028B                              l885 01FD                              l893 0257  
                            l957 007B                              l965 027D                              l981 00CF  
                            l973 00B1                              l879 028C                              l895 0267  
                            l887 0205                              l959 0083                              l991 00F2  
                            l983 00D8                              l975 00BA                              l967 009A  
                            l897 0271                              l889 0213                              l985 00DC  
                            l977 00C5                              l969 009F                              l899 0276  
                            l987 00EB                              l979 00CA                              _GIE 005F  
                            _RE1 0049                              _RE2 004A                              u200 01F9  
                            u201 01F8                              u210 004F                              u211 004E  
                            u140 022A                              u220 008C                              u141 0226  
                            u221 008B                              u230 00C5                              u231 00C4  
                            u160 0221                              u240 00EA                              u161 0220  
                            u241 00E9                              u154 022D                              u170 01D9  
                            u307 0104                              u171 01D8                              u180 01E9  
                            u317 0113                              u181 01E8                              u190 01EE  
                            _PR2 0092                              u327 0121                              u191 01ED  
                            u337 0137                              u347 0145                              u357 0153  
                            u277 0037                              u367 0232                              u287 0074  
                            u377 023C                              u297 0092                              _isr 01A0  
                 clcd_putch@addr 0076                              fsr0 0004                   clcd_putch@data 0077  
          ??_read_digital_keypad 0072                             ?_isr 0070                             STR_1 017D  
                           STR_2 0197                             STR_3 016D                             STR_4 018B  
                           STR_5 016D                             STR_6 015D                             _PEIE 005E  
                           _main 009A                             btemp 007E                             start 000C  
                 clcd_write@byte 0075                   clcd_write@mode 0072          __end_of_power_on_screen 009A  
      ??_washing_program_display 0078                            ??_isr 0070                            ?_main 0070  
                          i1l127 01CC                     ?_init_config 0070                            i1l993 01A0  
                          i1l995 01A6                            i1l997 01BF                            i1l999 01C9  
                          u25_20 01A6                            u25_21 01A5                            u26_20 01BF  
                          u26_21 01BE                            _PORTB 0006                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                     ?_init_timer2 0070  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __initialization 0010                     __end_of_main 0100                           ??_main 007B  
__end_of_washing_program_display 0287                           _TMR2IE 0461                           _TMR2IF 0061  
                         _TMR2ON 0092                           _TRISE1 0449                           _TRISE2 044A  
    __end_of_init_digital_keypad 0298          _init_display_controller 0100                 ?_power_on_screen 0070  
                   __pdataCOMMON 007B                           saved_w 007E          __end_of__initialization 0020  
                 __pcstackCOMMON 0070                     __pidataBANK0 0299                       __pbssBANK0 0027  
      ??_init_display_controller 0076                       _clcd_print 01FD                       _clcd_putch 0256  
                     _clcd_write 0222                       __pmaintext 009A                     _clear_screen 0000  
                     __pintentry 0004                          _T2CKPS0 0090                          _T2CKPS1 0091  
    __end_of_read_digital_keypad 01FD                          _TOUTPS0 0093                          _TOUTPS1 0094  
                        _TOUTPS2 0095                          _TOUTPS3 0096                       __stringtab 0157  
                        __ptext1 0278                          __ptext2 01D3                          __ptext3 0024  
                        __ptext4 0256                          __ptext5 01FD                          __ptext6 0267  
                        __ptext7 0242                          __ptext8 0292                          __ptext9 0287  
__end_of_init_display_controller 0157                __end_of_init_clcd 0292                          main@key 0026  
           end_of_initialization 0020                      ?_clcd_print 0076                      ?_clcd_putch 0076  
                    ?_clcd_write 0072         ?_washing_program_display 0070       washing_program_display@key 0070  
                  clcd_print@str 0076                    __pidataCOMMON 0298              start_initialization 0010  
                    __end_of_isr 01D3                      __pdataBANK0 002B                    ??_init_config 0078  
                  ??_init_timer2 0072                        ___latbits 0002                    __pcstackBANK0 0020  
           power_on_screen@i_132 0022                        __pstrings 0157                        _init_clcd 0287  
            __end_of_init_config 0278                ??_power_on_screen 0078              __end_of_init_timer2 0256  
       ?_init_display_controller 0070                interrupt_function 0004                     ??_clcd_print 0078  
                   ??_clcd_putch 0077                     ??_clcd_write 0073                      __stringbase 015C  
                      main@delay 0024               __end_of_clcd_print 0222               __end_of_clcd_putch 0267  
             __end_of_clcd_write 0242                       ?_init_clcd 0070              _init_digital_keypad 0292  
           ?_init_digital_keypad 0070               __end_of__stringtab 015D                      _init_config 0267  
               _operational_mode 002B                      _init_timer2 0242                         __ptext10 0100  
                       __ptext11 0222                         __ptext12 01A0          read_digital_keypad@mode 0073  
        read_digital_keypad@once 007B                    ?_clear_screen 0070            ??_init_digital_keypad 0072  
                       isr@count 0027                      ??_init_clcd 0078                         intlevel1 0000  
                      stringcode 0157                   ??_clear_screen 0070              _read_digital_keypad 01D3  
        _washing_program_display 0278                  _power_on_screen 0024                         stringdir 0157  
                       stringtab 0157             ?_read_digital_keypad 0070                 power_on_screen@i 0020  
